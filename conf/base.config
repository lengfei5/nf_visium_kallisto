/*
 * -------------------------------------------------
 *  Nextflow base config file
 * -------------------------------------------------
 * A 'blank slate' config file, appropriate for general
 * use on most high performace compute environments.
 * Assumes that all software is installed and available
 * on the PATH. Runs in `local` mode - all jobs will be
 * run on the logged in environment.
 */

process {

  container = params.container

  // error strategy
  //errorStrategy = { task.exitStatus in [1,143,137,104,134,139] ? 'retry' : 'terminate' }
  errorStrategy = { task.attempt < 4 ? 'retry' : 'finish' }
  maxRetries = 3
  //maxErrors = '-1'

  // basic resources
  cpus = { check_max( 8, 'cpus' ) }
  memory = { check_max( 32.GB * task.attempt, 'memory' ) }
  time = { check_max( 8.h * task.attempt, 'time' ) }

  // Process-specific resource requirements
  withName:splitfastq{
	cpus = { check_max( 8, 'cpus' ) }
    memory = { check_max( 16.GB * task.attempt, 'memory' ) }
    time = { check_max( 4.h * task.attempt, 'time' ) }
    errorStrategy = 'ignore'
  }

  withName:cutadapt {
    cpus = { check_max( 16, 'cpus' ) }
    memory = { check_max( 32.GB * task.attempt, 'memory' ) }
    time = { check_max( 8.h * task.attempt, 'time' ) }
  }

  withName:fastqc{
	cpus = { check_max( 16, 'cpus' ) }
    memory = { check_max( 16.GB * task.attempt, 'memory' ) }
    time = { check_max( 4.h * task.attempt, 'time' ) }
    errorStrategy = 'ignore'
  }

  withName:align {
    cpus = { check_max( 32, 'cpus' ) }
    memory = { check_max( 64.GB * task.attempt, 'memory' ) }
    time = { check_max( 48.h * task.attempt, 'time' ) }
  }

  withName:filter_rmdup_bam {
    cpus = { check_max( 16, 'cpus' ) }
    memory = { check_max( 64.GB * task.attempt, 'memory' ) }
    time = { check_max( 24.h * task.attempt, 'time' ) }
  }

  withName:macs2_peak {
    cpus = { check_max( 8, 'cpus' ) }
    memory = { check_max( 32.GB * task.attempt, 'memory' ) }
    time = { check_max( 8.h * task.attempt, 'time' ) }
  }

  withName:bigwig_deeptools {
   cpus = { check_max( 16 * task.attempt, 'cpus' ) }
    memory = { check_max( 32.GB * task.attempt, 'memory' ) }
    time = { check_max( 8.h * task.attempt, 'time' ) }
  }

  withName:multiqc {
    memory = { check_max( 4.GB * task.attempt, 'memory' ) }
    errorStrategy = 'ignore'
  }

  withName:get_software_versions {
    memory = { check_max( 2.GB, 'memory' ) }
    cache = false
    errorStrategy = 'ignore'
  }

  withName:workflow_summary_mqc {
    memory = { check_max( 2.GB, 'memory' ) }
    cache = false
    executor = 'local'
    errorStrategy = 'ignore'
  }
}

params {
  // Defaults only, expecting to be overwritten
  max_memory = 128.GB
  max_cpus = 32
  max_time = 24.h
  //igenomes_base = 's3://ngi-igenomes/igenomes/'
}
